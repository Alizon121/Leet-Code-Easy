/*Given an integer array nums, return the largest perimeter of a triangle with a 
non-zero area, formed from three of these lengths. If it is impossible to form any 
triangle of a non-zero area, return 0.*/

// Triangle perimeter is formed by a + b + c
// Sum of the triangle's two sides must be > hypotenuse

/**
 * @param {number[]} nums
 * @return {number}
 */
let largestPerimeter = function(nums) {
    // if (nums.length < 3) return 0; // constraint accounts for this possiblity 
    // Constraint also accounts for nums[i] being greater than 0

    // Find the largest number in the array and determine if the side combinations
    // Are greater than the largest number
    let max = 0;
    let sum = 0;
        for (let num of nums) {
            if (max < num) {
                max = num
            }

            let copy = [...nums]
            copy.splice(copy.indexOf(max), 1)

        for (let nums of copy) {
            console.log(copy)
        }
    }
    // return sum
};

console.log(largestPerimeter([2,1,2]))

